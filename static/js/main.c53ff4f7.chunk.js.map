{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","xIssNext","step","status","current","winner","moves","map","move","desc","key","jumpTo","onClicklick","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sLAKA,SAASA,EAAOC,GACd,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAME,SACzCF,EAAMG,O,IAKHC,E,qLACWC,GAAI,IAAD,OACZ,OACE,kBAACN,EAAD,eACUO,KAAKN,MAAMO,QAAQF,GAD7B,cAEW,kBAAM,EAAKL,MAAME,QAAQG,Q,+BAM1C,OACE,6BACE,yBAAKJ,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,IAErB,yBAAKP,UAAU,aACZK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,S,GA1BTC,IAAMC,WAiCpBC,E,YACJ,WAAYX,GAAO,IAAD,8BAChB,4CAAMA,KACDY,MAAQ,CACXC,QAAU,CACR,CACEN,QAASO,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GATK,E,yEAcRZ,GACV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAGZ,KAAKM,MAAMI,WAAa,GAE9DT,EADUM,EAAQA,EAAQM,OAAS,GACjBZ,QAAQW,QAC5BE,EAAgBb,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKe,SAAS,CACZR,QAASA,EAAQS,OAAO,CACtB,CACEf,QAASA,KAGbS,WAAWH,EAAQM,OACnBF,SAAUX,KAAKM,MAAMW,c,6BAIlBC,GACLlB,KAAKe,SAAS,CACZL,WAAYQ,EACZP,QAAUO,EAAO,IAAO,M,+BAIpB,IAgBFC,EAhBC,OACDZ,EAAUP,KAAKM,MAAMC,QACrBa,EAAUb,EAAQP,KAAKM,MAAMI,YAC7BW,EAASP,EAAgBM,EAAQnB,SAEjCqB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQ5B,QAAS,kBAAM,EAAK+B,OAAOH,KAAQC,OAa/C,OANEN,EADEE,EACO,WAAcA,EAGd,iBAAmBrB,KAAKM,MAAMK,QAAU,IAAM,KAIvD,yBAAKhB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CACEG,QAASmB,EAAQnB,QACjB2B,YAAa,SAAA7B,GAAC,OAAI,EAAK8B,YAAY9B,OAGvC,yBAAKJ,UAAU,aACb,6BAAMwB,GACN,gCAAMG,S,GA3EKnB,IAAMC,WAqFzB,SAASU,EAAgBb,GAWvB,IAVA,IAAM6B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA/B,EAAI,EAAGA,EAAI+B,EAAMjB,OAAQd,IAAK,CAAC,IAAD,cACnB+B,EAAM/B,GADa,GAC9BgC,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIhC,EAAQ8B,IAAM9B,EAAQ8B,KAAO9B,EAAQ+B,IAAM/B,EAAQ8B,KAAO9B,EAAQgC,GAEpE,OAAOhC,EAAQ8B,GAGnB,OAAO,KApBTG,IAASC,OAAO,kBAAC9B,EAAD,MAAU+B,SAASC,eAAe,U","file":"static/js/main.c53ff4f7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n    {props.value}\n    </button>\n  );\n}\n  \n  class Board extends React.Component {\n      renderSquare(i) {\n          return (\n            <Square>\n              value= {this.props.squares[i]};\n              onClick={() => this.props.onClick(i)}\n            </Square>\n          );\n        }\n  \n      render (){\n      return ( \n        <div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        history:  [\n          {\n            squares: Array(9).fill(null)\n          }\n        ],\n        stepNumber: 0,\n        xIsNext: true\n      };\n    }\n\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]){\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"0\";\n    this.setState({\n      history: history.concat([\n        {        \n          squares: squares\n        }\n      ]),\n      stepNumber:history.length,\n      xIsNext: !this.state.xIssNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0\n    });\n  }\n\nrender() {\n  const history = this.state.history;\n  const current = history[this.state.stepNumber];\n  const winner = calculateWinner(current.squares);\n\n  const moves = history.map((step, move) => {\n    const desc = move ?\n      'Go to move #' + move :\n      'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => this.jumpTo(move)}>{desc}</button>\n      </li>\n    );\n  });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' +  winner;\n    }\n    else {\n      status = 'Next player: ' + (this.state.xIsNext ? \"X\" : \"0\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"gmae board\">\n          <Board\n            squares={current.squares}\n            onClicklick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n  // ========================================\n  \n  ReactDOM.render(<Game />, document.getElementById('root'));\n\n  function calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) \n      {\n        return squares[a];\n      }\n    }\n    return null;\n  }"],"sourceRoot":""}